{"version":3,"file":"component---src-pages-index-tsx-e7a8f7af533cd7f38d77.js","mappings":"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","sources":["webpack://meu-site/./node_modules/camelcase/index.js","webpack://meu-site/../src/image-utils.ts","webpack://meu-site/../src/components/hooks.ts","webpack://meu-site/../src/components/layout-wrapper.tsx","webpack://meu-site/../src/components/picture.tsx","webpack://meu-site/../src/components/placeholder.tsx","webpack://meu-site/../src/components/main-image.tsx","webpack://meu-site/../src/components/gatsby-image.server.tsx","webpack://meu-site/../src/components/gatsby-image.browser.tsx","webpack://meu-site/../src/components/static-image.server.tsx","webpack://meu-site/../src/components/static-image.tsx","webpack://meu-site/./src/components/buttons/primary-button/PrimaryButton.tsx","webpack://meu-site/./src/components/switch/Switch.tsx","webpack://meu-site/./src/components/nav-bar/NavBar.tsx","webpack://meu-site/./src/components/tech-circles/JsTechCircle.tsx","webpack://meu-site/./src/components/tech-circles/CssTechCircle.tsx","webpack://meu-site/./src/components/tech-circles/DevOpsTechCircle.tsx","webpack://meu-site/./src/components/main-header/MainHeader.tsx","webpack://meu-site/./src/components/main-section/MainSection.tsx","webpack://meu-site/./src/components/main-about/MainAbout.tsx","webpack://meu-site/./src/components/main-footer/MainFooter.tsx","webpack://meu-site/./src/components/contact-form/ContactForm.tsx","webpack://meu-site/./src/components/main-contact/MainContact.tsx","webpack://meu-site/./src/views/index/MainPage.tsx","webpack://meu-site/./src/pages/index.tsx","webpack://meu-site/./node_modules/react-icons/lib/esm/iconsManifest.js","webpack://meu-site/./node_modules/react-icons/lib/esm/iconContext.js","webpack://meu-site/./node_modules/react-icons/lib/esm/iconBase.js"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import React from \"react\";\r\n\r\ntype ButtonProps = {\r\n  title: string;\r\n  onClick: () => void;\r\n};\r\n\r\nconst PrimaryButton: React.FC<ButtonProps> = (props) => {\r\n  return (\r\n    <button\r\n      className=\"px-12 py-3 bg-[#e7e7e7] dark:bg-transparent dark:hover:bg-darkwhite  dark:hover:text-darkgray border-darkwhite border rounded-full duration-300\"\r\n      onClick={props.onClick}\r\n    >\r\n      {props.title}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default PrimaryButton;\r\n","import React from \"react\";\r\nimport { HiOutlineMoon, HiOutlineSun } from \"react-icons/hi\";\r\n\r\ntype SwitchProps = {\r\n  onChange: () => void;\r\n};\r\n\r\nconst Switch: React.FC<SwitchProps> = (props) => {\r\n  return (\r\n    <label className=\"relative inline-flex items-center cursor-pointer\">\r\n      <input\r\n        onChange={props.onChange}\r\n        type=\"checkbox\"\r\n        value=\"\"\r\n        className=\"sr-only peer\"\r\n      ></input>\r\n      <div\r\n        className={`w-[4.5rem] h-[2.5rem] bg-gray-200 peer-focus:outline-none rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white dark:border-gray-600 peer-checked:bg-gray-border peer-checked:border`}\r\n      ></div>\r\n      <HiOutlineSun className=\"absolute peer-checked:invisible peer-checked:translate-x-full top-[50%] -translate-y-[50%] left-[3px] bg-darkwhite border-gray-300 border rounded-full h-[1.8rem] w-[1.9rem] transition-all text-yellow-400 \" />\r\n      <HiOutlineMoon className=\"absolute invisible peer-checked:visible rounded-full h-[1.8rem] w-[1.9rem] top-[50%] -translate-y-[50%] translate-x-full left-[3px] bg-darkwhite text-darkgray\" />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Switch;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Link } from \"gatsby\";\r\nimport PrimaryButton from \"../buttons/primary-button/PrimaryButton\";\r\nimport Switch from \"../switch/Switch\";\r\nimport { HiOutlineCode } from \"react-icons/hi\";\r\nimport { CgMenuRight } from \"react-icons/cg\";\r\nimport {\r\n  AiOutlineGithub,\r\n  AiOutlineLinkedin,\r\n  AiOutlineInstagram,\r\n} from \"react-icons/ai\";\r\n\r\nconst NavBar = () => {\r\n  const [theme, setTheme] = useState<string>(\"light\");\r\n  const [showNavBar, setShowNavBar] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (theme === \"dark\") {\r\n      document.documentElement.classList.add(\"dark\");\r\n    } else {\r\n      document.documentElement.classList.remove(\"dark\");\r\n    }\r\n  }, [theme]);\r\n\r\n  const handleThemeSwitch = () => {\r\n    setTheme(theme === \"dark\" ? \"light\" : \"dark\");\r\n  };\r\n\r\n  const handleToggleNavBar = () => {\r\n    setShowNavBar(!showNavBar);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"flex items-center justify-between md:text-base px-16 py-6 font-sora border-b border-b-slate-200 dark:border-b-[#363636] \">\r\n        <h4 className=\"flex items-center gap-8\">\r\n          <HiOutlineCode className=\"text-[2.5rem]\" />\r\n          Awdrey\r\n        </h4>\r\n        <button\r\n          onClick={handleToggleNavBar}\r\n          className=\"inline sm:hidden text-[3rem] focus:ring-gray-border focus:ring-2 ring-inset-4 rounded-lg\"\r\n        >\r\n          <CgMenuRight />\r\n        </button>\r\n        <ul className=\"hidden sm:flex gap-6 md:gap-12\">\r\n          <li className=\"relative hover:font-semibold duration-100\">\r\n            <Link to=\"/#projects\" className=\"peer bg-white dark:bg-darkgray\">\r\n              Projects\r\n            </Link>\r\n            <div className=\"bg-black w-[1.6rem] h-[.3rem] top-0 left-[50%] -translate-x-[50%] rounded-xl absolute -z-10 mt-[0.3rem] invisible peer-hover:visible  peer-hover:top-[100%] duration-300 \" />\r\n          </li>\r\n          <li className=\"relative hover:font-semibold duration-100\">\r\n            <Link to=\"/#about\" className=\"peer bg-white dark:bg-darkgray\">\r\n              About\r\n            </Link>\r\n            <div className=\"bg-black w-[1.6rem] h-[.3rem] top-0 left-[50%] -translate-x-[50%] rounded-xl absolute -z-10 mt-[0.3rem] invisible peer-hover:visible  peer-hover:top-[100%] duration-300 \" />\r\n          </li>\r\n          <li className=\"relative hover:font-semibold duration-100\">\r\n            <Link to=\"/#contact\" className=\"peer bg-white dark:bg-darkgray\">\r\n              Contact\r\n            </Link>\r\n            <div className=\"bg-black w-[1.6rem] h-[.3rem] top-0 left-[50%] -translate-x-[50%] rounded-xl absolute -z-10 mt-[0.3rem] invisible peer-hover:visible  peer-hover:top-[100%] duration-300 \" />\r\n          </li>\r\n        </ul>\r\n        <div className=\"hidden sm:flex gap-8\">\r\n          <Switch onChange={handleThemeSwitch} />\r\n          <Link to=\"/#contact\">\r\n            <PrimaryButton onClick={() => {}} title=\"Contact Me!\" />\r\n          </Link>\r\n        </div>\r\n      </nav>\r\n      <>\r\n        {showNavBar && (\r\n          <div\r\n            onClick={handleToggleNavBar}\r\n            className=\"fixed top-0 z-10 h-screen w-full bg-transparent\"\r\n          ></div>\r\n        )}\r\n        <nav\r\n          className={`sm:hidden fixed top-0 z-[1000] p-8 text-quaternary-h duration-300 h-screen w-[40%] bg-darkwhite dark:bg-darkgray shadow-input ${\r\n            showNavBar ? \" translate-x-0\" : \" -translate-x-full\"\r\n          }`}\r\n        >\r\n          {\" \"}\r\n          <div className=\"flex items-center justify-between mb-8\">\r\n            {\" \"}\r\n            <h4 className=\"flex items-center gap-4\">\r\n              <HiOutlineCode className=\"text-[2.5rem]\" />\r\n              Awdrey\r\n            </h4>\r\n            <Switch onChange={handleThemeSwitch} />\r\n          </div>\r\n          <hr className=\"mb-8\" />\r\n          <ul className=\"flex flex-col gap-6\">\r\n            <li\r\n              onClick={handleToggleNavBar}\r\n              className=\"relative hover:font-semibold duration-100\"\r\n            >\r\n              <Link to=\"/#projects\">Projects</Link>\r\n            </li>\r\n            <li\r\n              onClick={handleToggleNavBar}\r\n              className=\"relative hover:font-semibold duration-100\"\r\n            >\r\n              <Link to=\"/#about\">About</Link>\r\n            </li>\r\n            <li\r\n              onClick={handleToggleNavBar}\r\n              className=\"relative hover:font-semibold duration-100\"\r\n            >\r\n              <Link to=\"/#contact\">Contact</Link>\r\n            </li>\r\n          </ul>\r\n          {/* <div className=\"flex gap-6 text-base\">\r\n            <a href=\"https://github.com/AwdreyCandido\">\r\n              <div className=\"text-[2.5rem] cursor-pointer flex items-center justify-center dark:text-white\">\r\n                <AiOutlineGithub />\r\n              </div>\r\n            </a>\r\n            <a href=\"https://www.linkedin.com/in/awdrey-candido-67b381221/\">\r\n              <div className=\"text-[2.5rem] cursor-pointer flex items-center justify-center dark:text-white\">\r\n                <AiOutlineLinkedin />\r\n              </div>\r\n            </a>\r\n            <a href=\"https://www.instagram.com/awdrey.candido/?next=%2F\">\r\n              <div className=\"text-[2.5rem] cursor-pointer flex items-center justify-center dark:text-white\">\r\n                <AiOutlineInstagram />\r\n              </div>\r\n            </a>\r\n          </div> */}\r\n        </nav>\r\n      </>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nimport reactLogo from \"./../../images/react.png\";\r\nimport reduxLogo from \"./../../images/redux.png\";\r\nimport reactNativeLogo from \"./../../images/react-native.png\";\r\nimport javascriptLogo from \"./../../images/javascript.png\";\r\nimport typescriptLogo from \"./../../images/typescript.png\";\r\n\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\n\r\nconst JsTechCircle = () => {\r\n  return (\r\n    <section className=\"relative w-min\">\r\n      <div className=\"animate-rotate relative items-center justify-center h-[25rem] w-[25rem] border-2 border-dashed border-slate-300 dark:border-gray-border rounded-full\">\r\n        <div className=\"absolute animate-rotate-back -top-[10%] left-[10%] h-[8rem] w-[8rem] p-4  border-2 border-dashed border-slate-300 dark:border-gray-border rounded-full\">\r\n          <StaticImage\r\n            src=\"./../../images/react.png\"\r\n            alt=\"react logo\"\r\n            className=\" drop-shadow-2xl\"\r\n          />\r\n        </div>\r\n        <div className=\"absolute animate-rotate-back top-[10%] left-[80%] h-[6rem] w-[6rem] p-4  border-2 border-dashed border-slate-300 dark:border-gray-border rounded-full\">\r\n          <StaticImage\r\n            src=\"./../../images/typescript.png\"\r\n            alt=\"typescript logo\"\r\n            className=\" drop-shadow-2xl\"\r\n          />\r\n        </div>\r\n        <div className=\"absolute animate-rotate-back top-[70%] h-[7rem] w-[7rem] p-6  border-2 border-dashed border-slate-300 dark:border-gray-border rounded-full \">\r\n          <StaticImage\r\n            src=\"./../../images/react-native.png\"\r\n            alt=\"react-native logo\"\r\n            className=\" drop-shadow-2xl\"\r\n          />\r\n        </div>\r\n        <div className=\"absolute animate-rotate-back top-[75%] left-[70%] h-[6rem] w-[6rem] p-6  border-2 border-dashed border-slate-300 dark:border-gray-border rounded-full\">\r\n          <StaticImage\r\n            src=\"./../../images/redux.png\"\r\n            alt=\"redux logo\"\r\n            className=\" drop-shadow-2xl\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"absolute h-[8rem] w-[8rem] bg-[#f9f9f9] dark:bg-white shadow-md rounded-full p-6 left-[50%] top-[50%] -translate-x-[50%] -translate-y-[50%]\">\r\n        <StaticImage src=\"./../../images/javascript.png\" alt=\"tailwind logo\" />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default JsTechCircle;\r\n","import React from \"react\";\r\n\r\nimport styledComponentsLogo from \"./../../images/styled-components.png\";\r\nimport sassLogo from \"./../../images/sass.png\";\r\nimport tailwindLogo from \"./../../images/tailwind.png\";\r\nimport cssLogo from \"./../../images/css3.png\";\r\n\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\n\r\nconst CssTechCircle = () => {\r\n  return (\r\n    <section className=\"relative w-min\">\r\n      <div className=\"animate-rotate relative items-center justify-center h-[20rem] w-[20rem] border-2 border-dashed border-slate-300 dark:border-gray-border rounded-full\">\r\n        {/* <div className=\"absolute animate-rotate-back -top-[10%] left-[10%] h-[8rem] w-[8rem] p-4  border-2 border-dashed border-slate-300 dark:border-gray-border rounded-full\">\r\n          <img\r\n            src={reactLogo}\r\n            alt=\"tailwind logo\"\r\n            className=\" drop-shadow-2xl\"\r\n          />\r\n        </div> */}\r\n        <div className=\"absolute animate-rotate-back -top-[15%] left-[40%] h-[6rem] w-[6rem] p-4  border-2 border-dashed border-slate-300 dark:border-gray-border rounded-full\">\r\n          <StaticImage\r\n            src=\"./../../images/sass.png\"\r\n            alt=\"sass logo\"\r\n            className=\" drop-shadow-2xl\"\r\n          />\r\n        </div>\r\n        <div className=\"absolute animate-rotate-back top-[70%]  h-[7rem] w-[7rem] p-6  border-2 border-dashed border-slate-300 dark:border-gray-border rounded-full \">\r\n          <StaticImage\r\n            src=\"./../../images/tailwind.png\"\r\n            alt=\"tailwind logo\"\r\n            className=\" drop-shadow-2xl\"\r\n          />\r\n        </div>\r\n        <div className=\"absolute animate-rotate-back top-[75%] left-[70%] h-[7rem] w-[7rem] p-6  border-2 border-dashed border-slate-300 dark:border-gray-border rounded-full\">\r\n          <StaticImage\r\n            src=\"./../../images/styled-components.png\"\r\n            alt=\"styled-components logo\"\r\n            className=\" drop-shadow-2xl\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"absolute h-[8rem] w-[8rem] bg-darkwhite dark:bg-white shadow-input rounded-full p-4 left-[50%] top-[50%] -translate-x-[50%] -translate-y-[50%]\">\r\n        <StaticImage src=\"./../../images/css3.png\" alt=\"tailwind logo\" />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CssTechCircle;\r\n","import React from \"react\";\r\n\r\nimport mysqlLogo from \"./../../images/mysql.png\";\r\nimport gitLogo from \"./../../images/git.png\";\r\nimport dockerLogo from \"./../../images/docker.png\";\r\n\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\n\r\nconst DevOpsTechCircle = () => {\r\n  return (\r\n    <section className=\"relative w-min\">\r\n      <div className=\"animate-rotate relative items-center justify-center h-[15rem] w-[15rem] border-2 border-dashed border-slate-300 dark:border-gray-border rounded-full\">\r\n        {/* <div className=\"absolute animate-rotate-back -top-[10%] left-[10%] h-[8rem] w-[8rem] p-4  border-2 border-dashed border-slate-300 dark:border-gray-border rounded-full\">\r\n          <img\r\n            src={reactLogo}\r\n            alt=\"tailwind logo\"\r\n            className=\" drop-shadow-2xl\"\r\n          />\r\n        </div> */}\r\n        <div className=\"absolute  top-0 left-[50%] -translate-x-[50%] -translate-y-[50%] h-[6rem] w-[6rem] p-4  border-2 border-dashed border-slate-300 dark:border-gray-border rounded-full\">\r\n          <StaticImage\r\n            src=\"./../../images/git.png\"\r\n            alt=\"git logo\"\r\n            className=\" drop-shadow-2xl animate-rotate-back\"\r\n          />\r\n        </div>\r\n        <div className=\"absolute  top-[50%] left-0  -translate-x-[50%]  h-[8rem] w-[8rem] p-6  border-2 border-dashed border-slate-300 dark:border-gray-border rounded-full \">\r\n          <StaticImage\r\n            src=\"./../../images/mysql.png\"\r\n            alt=\"mysql logo\"\r\n            className=\" drop-shadow-2xl animate-rotate-back\"\r\n          />\r\n        </div>\r\n        <div className=\"absolute  top-[50%] left-[100%] -translate-x-[50%] h-[7rem] w-[7rem] p-6  border-2 border-dashed border-slate-300 dark:border-gray-border rounded-full\">\r\n          <StaticImage\r\n            src=\"./../../images/docker.png\"\r\n            alt=\"docker logo\"\r\n            className=\" drop-shadow-2xl animate-rotate-back\"\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"absolute h-[8rem] w-[8rem] bg-darkwhite dark:bg-white shadow-input rounded-full p-4 left-[50%] top-[50%] -translate-x-[50%] -translate-y-[50%]\">\r\n        <img src={cssLogo} alt=\"tailwind logo\" />\r\n      </div> */}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DevOpsTechCircle;\r\n","import React from \"react\";\r\nimport PrimaryButton from \"../buttons/primary-button/PrimaryButton\";\r\n\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\n\r\nimport {\r\n  AiOutlineGithub,\r\n  AiOutlineLinkedin,\r\n  AiOutlineInstagram,\r\n} from \"react-icons/ai\";\r\nimport JsTechCircle from \"../tech-circles/JsTechCircle\";\r\nimport CssTechCircle from \"../tech-circles/CssTechCircle\";\r\nimport DevOpsTechCircle from \"../tech-circles/DevOpsTechCircle\";\r\n\r\nconst MainHeader = () => {\r\n  return (\r\n    <section className=\"flex flex-col lg:flex-row w-full h-fit font-sora\">\r\n      <section className=\"flex items-center justify-center xl:justify-normal h-[65rem] w-full lg:border-r-2 border-b-2 border-slate-200 dark:border-[#363636] border-dashed\">\r\n        <div className=\"relative flex flex-col gap-8 w-[80%] sm:w-[76%] xl:ml-[11rem]\">\r\n          <h1 className=\"text-header\">\r\n            HEY!{\" \"}\r\n            <span className=\"font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-purple-400 to-pink-600\">\r\n              I'm Awdrey\r\n            </span>\r\n            , A{\" \"}\r\n            <span className=\"font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-purple-400 to-pink-600\">\r\n              FRONT-END{\" \"}\r\n            </span>{\" \"}\r\n            DEVELOPER BASED IN\r\n            <span className=\"font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-purple-400 to-pink-600\">\r\n              {\" \"}\r\n              BRAZIL\r\n            </span>\r\n          </h1>\r\n          <p className=\"text-base my-4\">\r\n            By being a Front-End developer basically means that I can create\r\n            beautiful and attractive screens 😳...\r\n          </p>\r\n          <div className=\"flex gap-6 text-base\">\r\n            <a href=\"/#contact\">\r\n              <button\r\n                className=\" px-8 sm:px-12 py-4 text-[1.4rem] sm:text-base bg-[#171717] hover:bg-darkwhite hover:text-darkgray dark:bg-transparent border dark:border-gray-border border-darkwhite  dark:hover:bg-darkwhite  dark:hover:text-darkgray text-white rounded-full duration-300\"\r\n                onClick={() => {}}\r\n              >\r\n                Contact Me!\r\n              </button>\r\n            </a>\r\n            <a target=\"_blank\" href=\"https://github.com/AwdreyCandido\">\r\n              <div className=\"h-[4.5rem] w-[4.5rem] text-[2.5rem] cursor-pointer flex items-center justify-center rounded-full border border-black-20 hover:bg-darkgray hover:text-darkwhite dark:text-white dark:border-[#363636] dark:hover:bg-darkwhite  dark:hover:text-darkgray duration-300\">\r\n                <AiOutlineGithub />\r\n              </div>\r\n            </a>\r\n            <a\r\n              target=\"_blank\"\r\n              href=\"https://www.linkedin.com/in/awdrey-candido-67b381221/\"\r\n            >\r\n              <div className=\"h-[4.5rem] w-[4.5rem] text-[2.5rem] cursor-pointer flex items-center justify-center rounded-full border border-black-20 hover:bg-darkgray hover:text-darkwhite dark:text-white dark:border-[#363636] dark:hover:bg-darkwhite  dark:hover:text-darkgray duration-300\">\r\n                <AiOutlineLinkedin />\r\n              </div>\r\n            </a>\r\n            <a\r\n              target=\"_blank\"\r\n              href=\"https://www.instagram.com/awdrey.candido/?next=%2F\"\r\n            >\r\n              <div className=\"h-[4.5rem] w-[4.5rem] text-[2.5rem] cursor-pointer flex items-center justify-center rounded-full border border-black-20 hover:bg-darkgray hover:text-darkwhite dark:text-white dark:border-[#363636] dark:hover:bg-darkwhite  dark:hover:text-darkgray duration-300\">\r\n                <AiOutlineInstagram />\r\n              </div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"relative flex items-center justify-center h-[65rem] border-b-2 border-b-slate-200 dark:border-b-[#363636] border-dashed w-full\">\r\n        <div>\r\n          <StaticImage\r\n            className=\"relative h-[35rem] w-[35rem] md:h-[45rem] md:w-[45rem] xl:-left-[10%] bg-[#e2e2e2] object-cover grayscale dark:grayscale-0 dark:bg-white rounded-full\"\r\n            src=\"./../../images/perfil.jpg\"\r\n            alt=\"my profile photo\"\r\n          />\r\n        </div>\r\n        <div className=\"h-[9rem] w-[9rem] scale-[.7] sm:scale-100 absolute  top-[10%] right-[35%] sm:top-[5%]\">\r\n          <JsTechCircle />\r\n        </div>\r\n        <div className=\"h-[8rem] w-[8rem] scale-[.7] sm:scale-100 absolute left-[10%] top-[20%]\">\r\n          <DevOpsTechCircle />\r\n        </div>\r\n        <div className=\"h-[14rem] w-[14rem] scale-[.7] sm:scale-100 p-4 absolute right-[40%] top-[65%]\">\r\n          <CssTechCircle />\r\n        </div>\r\n        {/* <div className=\"h-[7rem] w-[7rem] p-4 border-dashed border-slate-200 border-2 dark:bg-white animate-breathe rounded-full absolute left-[10%] top-[25%]\">\r\n          <img src={sassLogo} alt=\"tailwind logo\" />\r\n        </div> */}\r\n        {/* <div className=\"h-[7rem] w-[7rem] p-6 border-dashed border-slate-200 border-2 dark:bg-white animate-breathe rounded-full absolute right-[20%] top-[35%]\">\r\n          <img src={javascriptLogo} alt=\"tailwind logo\" />\r\n        </div>\r\n        <div className=\"h-[10rem] w-[10rem] p-4 border-dashed border-slate-200 border-2 dark:bg-white animate-breathe rounded-full absolute left-[25%] top-[65%]\">\r\n          <img src={tailwindLogo} alt=\"tailwind logo\" />\r\n        </div> */}\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MainHeader;\r\n","import React from \"react\";\r\n\r\n// import gpmCrmScreen from \"./../../images/gpm1.png\";\r\n// import gpmRegisterScreen from \"./../../images/gpm2.png\";\r\n// import mangrover from \"./../../images/mangrover-site.png\";\r\n\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\n\r\nconst MainSection = () => {\r\n  return (\r\n    <section\r\n      id=\"projects\"\r\n      className=\" flex-col w-full font-sora py-[11rem] border-b-2 border-slate-200 dark:border-[#363636] border-dashed px-12 md:px-[10rem]\"\r\n    >\r\n      <h1 className=\"text-header text-center lg:ml-[11rem] mb-4\">\r\n        I've been working on\r\n      </h1>\r\n\r\n      <section className=\"grid place-content-center lg:grid-cols-2 xl:grid-cols-3 gap-x-[5rem] w-full \">\r\n        <figure className=\" xl:col-span-2 w-full mt-[5rem]\">\r\n          <a href=\"https://gpm.mangrover.com.br/login\" target=\"_blanck\">\r\n            <div className=\"relative h-[30rem] sm:h-[40rem] border-2 border-dashed border-slate-200 dark:border-gray-border w-full rounded-3xl overflow-hidden\">\r\n              <StaticImage\r\n                src=\"./../../images/gpm2.png\"\r\n                alt=\"gpm register page\"\r\n                className=\"peer w-[70rem] rounded-2xl shadow-input absolute -left-[5%] -top-[1%] md:-top-[10%] hover:-left-[1%] hover:-top-[1%] hover:scale-105 hover:z-10 duration-300 peer-hover:-top-[2%]\"\r\n              />\r\n\r\n              <StaticImage\r\n                src=\"./../../images/gpm1.png\"\r\n                alt=\"gpm crm page\"\r\n                className=\"peer w-[70rem] rounded-2xl  shadow-input  absolute  -right-[5%] -bottom-[5%] md:-right-[15%] md:-bottom-[10%] hover:-right-[1%] hover:bottom-[-1%] duration-300 peer-hover:-right-[25%]\"\r\n              />\r\n            </div>\r\n          </a>\r\n          <p className=\"mt-6\">Development</p>\r\n          <h2 className=\"text-primary-h\">Gestor Político Mangrover</h2>\r\n        </figure>\r\n        <figure className=\"w-full mt-[5rem]\">\r\n          <a href=\"https://mangrover.com.br\" target=\"_blanck\">\r\n            <div className=\"relative h-[40rem] border-2 border-dashed overflow-hidden border-slate-200 dark:border-gray-border w-full rounded-3xl\">\r\n              <StaticImage\r\n                src=\"./../../images/mangrover-site.png\"\r\n                alt=\"mangrover landing page\"\r\n                className=\"peer absolute w-full rounded-2xl object-contain shadow-input left-[10%] top-[5%] hover:-left-[1%] hover:-top-[1%] hover:scale-105 hover:z-10 duration-300 peer-hover:-top-[2%]\"\r\n              />\r\n            </div>\r\n          </a>\r\n          <p className=\"mt-6\">Development</p>\r\n          <h2 className=\"text-primary-h\">Site Mangrover</h2>\r\n        </figure>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MainSection;\r\n","import React from \"react\";\r\n\r\nimport cats from \"./../../images/cats.jpeg\";\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\n\r\nconst MainAbout = () => {\r\n  return (\r\n    <section\r\n      id=\"about\"\r\n      className=\"flex-col w-full font-sora py-[11rem] border-b-2 border-slate-200 dark:border-[#363636] border-dashed px-12 md:px-[10rem]\"\r\n    >\r\n      <h1 className=\"text-header  mb-4\">Who am I?</h1>\r\n\r\n      <section className=\"flex flex-col xl:flex-row  w-full items-center xl:justify-between\">\r\n        <div className=\"flex flex-col gap-8 mt-[5rem] text-base w-full lg:w-[80%] xl:w-[65%]\">\r\n          <p>\r\n            My name is Awdrey Candido 😎. I am 22 years old, I live In\r\n            Pernambuco, Brazil and I'm a self-taught Front-End developer. At the\r\n            moment I'm a college student of Information Systems at Universidade\r\n            Federal Rural de Pernambuco.\r\n          </p>\r\n          <p>\r\n            I've started to learn about this incredible world of technology with\r\n            the C programming language, but after some more research, I found\r\n            myself in love with the Front-End way to live 😁. But recently I was\r\n            flirting with native mobile development with Kotlin, You can see it\r\n            in my Github, so let's see where it goes.\r\n          </p>\r\n\r\n          <p>\r\n            More about me? As any developer I don't live without coffee, I have\r\n            a strange addiction with cats and Elvis songs... Uhhh, you only\r\n            wanna know about software? It is secret 🤫, but I can tell more if\r\n            you're really interested. Just contact me!\r\n          </p>\r\n        </div>\r\n        <div className=\"relative self-center mt-[8rem] xl:mt-0\">\r\n          <div className=\"w-[35rem] sm:scale-[1.2] bg-[#e2e2e2] overflow-hidden dark:bg-white rounded-3xl\">\r\n            <StaticImage\r\n              src=\"./../../images/cats.jpeg\"\r\n              alt=\"me and some cats\"\r\n              className=\"object-cover w-[35rem] grayscale dark:grayscale-0\"\r\n            />\r\n          </div>\r\n          <div className=\"absolute w-[40rem] left-[5%] top-[25%] -z-10 h-[20rem] border-2 border-dashed border-slate-200 dark:border-gray-border rounded-3xl\"></div>\r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MainAbout;\r\n","import React from \"react\";\r\nimport {\r\n  AiOutlineGithub,\r\n  AiOutlineLinkedin,\r\n  AiOutlineInstagram,\r\n} from \"react-icons/ai\";\r\nimport { HiOutlineCode } from \"react-icons/hi\";\r\nimport ContactForm from \"../contact-form/ContactForm\";\r\nimport MainContact from \"../main-contact/MainContact\";\r\n\r\nconst MainFooter = () => {\r\n  const scrollToTop = () => {\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  return (\r\n    <section className=\"flex flex-col w-full font-sora pb-[3rem] border-b-2 border-slate-200 dark:border-[#363636] border-dashed\">\r\n      <div className=\"flex flex-col-reverse sm:flex-row gap-12 sm:gap-0 items-center w-full justify-between mt-[8rem] sm:px-16 pt-12 font-sora border-dashed border-t-2 border-t-slate-200 dark:border-t-[#363636] \">\r\n        <h4\r\n          onClick={scrollToTop}\r\n          className=\"flex items-center gap-4 cursor-pointer\"\r\n        >\r\n          <HiOutlineCode className=\"text-[2rem]\" />\r\n          Awdrey\r\n        </h4>\r\n        <p>© 2023. Awdrey Candido</p>\r\n        <div className=\"flex gap-6 text-base\">\r\n          <a target=\"_blank\" href=\"https://github.com/AwdreyCandido\">\r\n            <div className=\"text-[2.5rem] cursor-pointer flex items-center justify-center dark:text-white\">\r\n              <AiOutlineGithub />\r\n            </div>\r\n          </a>\r\n          <a\r\n            target=\"_blank\"\r\n            href=\"https://www.linkedin.com/in/awdrey-candido-67b381221/\"\r\n          >\r\n            <div className=\"text-[2.5rem] cursor-pointer flex items-center justify-center dark:text-white\">\r\n              <AiOutlineLinkedin />\r\n            </div>\r\n          </a>\r\n          <a\r\n            target=\"_blank\"\r\n            href=\"https://www.instagram.com/awdrey.candido/?next=%2F\"\r\n          >\r\n            <div className=\"text-[2.5rem] cursor-pointer flex items-center justify-center dark:text-white\">\r\n              <AiOutlineInstagram />\r\n            </div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MainFooter;\r\n","import React from \"react\";\r\nimport { HiOutlineArrowUpRight } from \"react-icons/hi2\";\r\n\r\nconst ContactForm = () => {\r\n  return (\r\n    <form\r\n      className=\"flex flex-col font-sora text-tertiary-h w-[80vw] lg:w-[60vw]  xl:w-[40vw] gap-20 \"\r\n      action=\"https://api.staticforms.xyz/submit\"\r\n      method=\"post\"\r\n    >\r\n      <input\r\n        type=\"hidden\"\r\n        name=\"accessKey\"\r\n        value=\"c081665d-5081-4a3b-8aab-c698ece254c7\"\r\n      />\r\n      <div className=\"flex flex-col sm:flex-row justify-between gap-12\">\r\n        <div className=\"flex flex-col gap-4 w-full\">\r\n          <label>What's your name?</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Your Name\"\r\n            required\r\n            className=\"focus:outline-none bg-transparent text-base px-4 py-2 border-b-2 border-slate-300\"\r\n          />\r\n        </div>\r\n        <div className=\"flex flex-col gap-4 w-full\">\r\n          <label>Where can I reach you?</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            placeholder=\"your@email.com\"\r\n            required\r\n            className=\"focus:outline-none bg-transparent text-base px-4 py-2 border-b-2 border-slate-300\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"flex flex-col gap-4 w-full\">\r\n        <label>What's your message?</label>\r\n        <textarea\r\n          name=\"message\"\r\n          rows={2}\r\n          maxLength={100}\r\n          required\r\n          placeholder=\"Tell me...\"\r\n          className=\"focus:outline-none bg-transparent text-base p-4 border-b-2 border-slate-300 resize-none\"\r\n        ></textarea>\r\n      </div>\r\n      {/* <input type=\"text\" name=\"replyTo\" value=\"myreplytoemail@example.com\" />\r\n      <input type=\"hidden\" name=\"replyTo\" value=\"@\" /> */}\r\n      {/* <input\r\n        type=\"hidden\"\r\n        name=\"redirectTo\"\r\n        value=\"https://example.com/contact/success\"\r\n    /> */}\r\n      <button className=\"group py-3 text-primary-h font-medium flex justify-center items-center gap-4\" type=\"submit\">\r\n        Send it <HiOutlineArrowUpRight className=\"group-hover:translate-x-2 group-hover:-translate-y-3 stroke-[2.5] duration-300\" />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport ContactForm from \"../contact-form/ContactForm\";\r\n\r\nconst MainContact = () => {\r\n  return (\r\n    <section\r\n      id=\"contact\"\r\n      className=\"flex flex-col font-sora xl:items-start gap-[5rem] mt-12 justify-between py-8 px-12 md:px-[10rem]\"\r\n    >\r\n      <h1 className=\"text-header  my-8 text-center sm:text-start\">\r\n        Let's work together?\r\n      </h1>\r\n\r\n      <div className=\" flex flex-col xl:flex-row items-center xl:items-start gap-[5rem] justify-between w-full\">\r\n        <h3 className=\"text-tertiary-h\">\r\n          Ask me anything or just say hi 👋...\r\n        </h3>\r\n        <ContactForm />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MainContact;\r\n","import React from \"react\";\r\nimport NavBar from \"../../components/nav-bar/NavBar\";\r\nimport MainHeader from \"../../components/main-header/MainHeader\";\r\nimport MainSection from \"../../components/main-section/MainSection\";\r\nimport MainAbout from \"../../components/main-about/MainAbout\";\r\nimport MainFooter from \"../../components/main-footer/MainFooter\";\r\nimport JsTechCircle from \"../../components/tech-circles/JsTechCircle\";\r\nimport CssTechCircle from \"../../components/tech-circles/CssTechCircle\";\r\nimport DevOpsTechCircle from \"../../components/tech-circles/DevOpsTechCircle\";\r\nimport MainContact from \"../../components/main-contact/MainContact\";\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <div className=\"overflow-hidden\">\r\n      <NavBar />\r\n      <MainHeader />\r\n      <MainSection />\r\n      <MainAbout />\r\n      <MainContact />\r\n      <MainFooter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import * as React from \"react\";\r\nimport type { HeadFC, PageProps } from \"gatsby\";\r\nimport MainPage from \"../views/index/MainPage\";\r\n\r\nconst IndexPage: React.FC<PageProps> = () => {\r\n  return <MainPage />;\r\n};\r\n\r\nexport default IndexPage;\r\n\r\n// export const Head: HeadFC = () => <title>Home Page</title>\r\n","export var IconsManifest = [\n  {\n    \"id\": \"ci\",\n    \"name\": \"Circum Icons\",\n    \"projectUrl\": \"https://circumicons.com/\",\n    \"license\": \"MPL-2.0 license\",\n    \"licenseUrl\": \"https://github.com/Klarr-Agency/Circum-Icons/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"fa\",\n    \"name\": \"Font Awesome 5\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"io\",\n    \"name\": \"Ionicons 4\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"io5\",\n    \"name\": \"Ionicons 5\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"md\",\n    \"name\": \"Material Design icons\",\n    \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"ti\",\n    \"name\": \"Typicons\",\n    \"projectUrl\": \"http://s-ings.com/typicons/\",\n    \"license\": \"CC BY-SA 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n  },\n  {\n    \"id\": \"go\",\n    \"name\": \"Github Octicons icons\",\n    \"projectUrl\": \"https://octicons.github.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"fi\",\n    \"name\": \"Feather\",\n    \"projectUrl\": \"https://feathericons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"lu\",\n    \"name\": \"Lucide\",\n    \"projectUrl\": \"https://lucide.dev/\",\n    \"license\": \"ISC\",\n    \"licenseUrl\": \"https://github.com/lucide-icons/lucide/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"gi\",\n    \"name\": \"Game Icons\",\n    \"projectUrl\": \"https://game-icons.net/\",\n    \"license\": \"CC BY 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n  },\n  {\n    \"id\": \"wi\",\n    \"name\": \"Weather Icons\",\n    \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n    \"license\": \"SIL OFL 1.1\",\n    \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n  },\n  {\n    \"id\": \"di\",\n    \"name\": \"Devicons\",\n    \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ai\",\n    \"name\": \"Ant Design Icons\",\n    \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"bs\",\n    \"name\": \"Bootstrap Icons\",\n    \"projectUrl\": \"https://github.com/twbs/icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ri\",\n    \"name\": \"Remix Icon\",\n    \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"fc\",\n    \"name\": \"Flat Color Icons\",\n    \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"gr\",\n    \"name\": \"Grommet-Icons\",\n    \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"hi\",\n    \"name\": \"Heroicons\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"hi2\",\n    \"name\": \"Heroicons 2\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"si\",\n    \"name\": \"Simple Icons\",\n    \"projectUrl\": \"https://simpleicons.org/\",\n    \"license\": \"CC0 1.0 Universal\",\n    \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n  },\n  {\n    \"id\": \"sl\",\n    \"name\": \"Simple Line Icons\",\n    \"projectUrl\": \"https://thesabbir.github.io/simple-line-icons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"im\",\n    \"name\": \"IcoMoon Free\",\n    \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://github.com/Keyamoon/IcoMoon-Free/blob/master/License.txt\"\n  },\n  {\n    \"id\": \"bi\",\n    \"name\": \"BoxIcons\",\n    \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://github.com/atisawd/boxicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"cg\",\n    \"name\": \"css.gg\",\n    \"projectUrl\": \"https://github.com/astrit/css.gg\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"vsc\",\n    \"name\": \"VS Code Icons\",\n    \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n    \"license\": \"CC BY 4.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"tb\",\n    \"name\": \"Tabler Icons\",\n    \"projectUrl\": \"https://github.com/tabler/tabler-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"tfi\",\n    \"name\": \"Themify Icons\",\n    \"projectUrl\": \"https://github.com/lykmapipo/themify-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/thecreation/standard-icons/blob/master/modules/themify-icons/LICENSE\"\n  },\n  {\n    \"id\": \"rx\",\n    \"name\": \"Radix Icons\",\n    \"projectUrl\": \"https://icons.radix-ui.com\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/radix-ui/icons/blob/master/LICENSE\"\n  }\n]","import React from \"react\";\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React from \"react\";\nimport { IconContext, DefaultContext } from \"./iconContext\";\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\nexport function GenIcon(data) {\n  // eslint-disable-next-line react/display-name\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function (conf) {\n    var attr = props.attr,\n      size = props.size,\n      title = props.title,\n      svgProps = __rest(props, [\"attr\", \"size\", \"title\"]);\n    var computedSize = size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + \" \" : \"\") + props.className;\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign(__assign({\n        color: props.color || conf.color\n      }, conf.style), props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","hasNativeLazyLoadSupport","HTMLImageElement","prototype","srcSet","width","height","layout","wrapperStyle","className","style","getMainProps","isLoading","isLoaded","images","loading","shouldLoad","_extends","opacity","getPlaceholderProps","placeholder","backgroundColor","objectFit","objectPosition","position","top","left","bottom","right","result","transition","Sizer","React","createElement","paddingTop","maxWidth","display","alt","role","src","LayoutWrapper","_ref","children","props","_objectWithoutPropertiesLoose","Fragment","Image","decoding","Picture","_ref2","fallback","sources","sizes","media","type","key","fallbackImage","propTypes","PropTypes","displayName","Placeholder","_Picture$propTypes","propName","componentName","Error","MainImage","removeNewLines","str","altValidator","rest","image","_excluded","Set","renderImageToStringPromise","renderImage","GatsbyImageHydrator","as","class","preactClass","onStartLoad","onLoad","onError","getWrapperProps","wStyle","wClass","wrapperProps","root","useRef","useMemo","JSON","stringify","sizer","useEffect","import","then","renderImageToString","swapPlaceholderImage","ssrImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","animationFrame","cleanupCallback","innerHTML","requestAnimationFrame","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","GatsbyImage","memo","_getStaticImage","StaticImage","__imageData","imageData","__error","console","warn","imgClassName","imgStyle","placeholderBackgroundColor","cleanedImages","checkDimensionProps","validLayouts","GatsbyImageBrowser","onClick","title","onChange","value","HiOutlineSun","HiOutlineMoon","theme","setTheme","useState","showNavBar","setShowNavBar","document","documentElement","classList","remove","handleThemeSwitch","handleToggleNavBar","HiOutlineCode","CgMenuRight","Link","to","Switch","PrimaryButton","href","target","AiOutlineGithub","AiOutlineLinkedin","AiOutlineInstagram","JsTechCircle","DevOpsTechCircle","CssTechCircle","id","window","scrollTo","action","method","name","required","rows","maxLength","HiOutlineArrowUpRight","ContactForm","NavBar","MainHeader","MainSection","MainAbout","MainContact","MainFooter","MainPage","DefaultContext","color","undefined","size","attr","IconContext","__assign","Object","assign","t","s","n","arguments","p","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Tree2Element","tree","node","tag","child","GenIcon","data","IconBase","elem","conf","svgProps","computedSize","stroke","fill","strokeWidth","xmlns","Consumer"],"sourceRoot":""}